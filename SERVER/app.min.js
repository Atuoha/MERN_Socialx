'use strict';const express=require("express"),app=express(),PORT=process.env.PORT||3221,mongoose=require("mongoose"),passport=require("passport"),path=require("path"),flash=require("connect-flash"),session=require("express-session"),upload=require("express-fileupload"),methodOverride=require("method-override"),bodyParser=require("body-parser"),{mongodbURL}=require("./config/db");mongoose.set("useFindAndModify",!1);mongoose.Promise=global.Promise;mongoose.set("useCreateIndex",!0);
mongoose.connect(mongodbURL,{useNewUrlParser:!0,useUnifiedTopology:!0}).then(a=>{console.log("database connected")}).catch(a=>console.log(`Errpr ${a}`));app.use(express.static(path.join(__dirname,"public")));app.use(bodyParser.json());app.use(bodyParser.urlencoded({extended:!0}));app.use(upload());app.use(flash());app.use(methodOverride("_method"));app.use(session({secret:"00000",resave:!0,saveUninitialized:!0}));app.use(passport.initialize());app.use(passport.session());
app.use((a,b,c)=>{b.locals.success_msg=a.flash("success_msg");b.locals.error_msg=a.flash("error_msg");b.locals.error=a.flash("error");b.locals.loggedUser=a.user;c()});const log=require("./controller/home/log");app.use("/logs",log);const posts=require("./controller/account/post");app.use("/posts",posts);const users=require("./controller/account/users");app.use("/users",users);app.listen(PORT,()=>{console.log(`Listening to port ${PORT}`)});