'use strict';const express=require("express"),app=express(),router=express.Router(),fs=require("fs"),faker=require("faker"),{isEmpty}=require("../../helpers/upload-helpers"),Post=require("../../model/Post"),User=require("../../model/User"),requireLogin=require("../../helpers/require-login");router.get("/*",(b,d,a)=>{b.app.locals="post";a()});router.get("/",(b,d)=>{Post.find().populate("user").sort("-createdAt").then(a=>{d.json({posts:a})}).catch(a=>console.log(a))});
router.get("/following_posts",(b,d)=>{console.log("following_posts..........");Post.find({user:{$in:b.user.following}}).populate("user").sort("-createdAt").then(a=>{d.json({posts:a});console.log(`FollowPosts: ${a}`)}).catch(a=>console.log(a))});router.get("/my-posts",requireLogin,(b,d)=>{console.log(`My Posts: ${b.user}`);Post.find({user:b.user._id}).populate("user").sort("-createdAt").then(a=>{User.findOne({_id:b.user._id}).then(c=>{d.json({posts:a,user:c})})}).catch(a=>console.log(a))});
router.get("/user-posts/:user",(b,d)=>{console.log(`Posts: ${b.params.user}`);Post.find({user:b.params.user}).populate("user").sort("-createdAt").then(a=>{User.findOne({_id:b.params.user}).then(c=>{d.json({posts:a,user:c})}).catch(c=>console.log(c))}).catch(a=>console.log(a))});router.get("/create",(b,d)=>{d.render("admin/posts/create")});router.get("/dummy",(b,d)=>{d.render("admin/posts/dummy")});
router.post("/create",requireLogin,(b,d)=>{const {title:a,content:c,file:e}=b.body;if(!a||!c||!e)return d.status(422).json({error:"Fields must not be empty"});Post.findOne({title:b.body.title}).populate("user").then(f=>{if(f)return d.status(422).json({error:"Post already exists!"});f=new Post;f.title=b.body.title;f.content=b.body.content;f.file=b.body.file;f.user=b.user.id;f.save().then(g=>d.status(200).json({success:`${g.title} has been published`})).catch(g=>console.log(g))})});
router.post("/dummy/generate",(b,d)=>{b.body.number||d.status(401).json({error:"Input can not be emptpy"});for(let a=0;a<b.body.number;a++){let c=new Post;c.title=faker.lorem.word()+""+faker.random.word();c.content=faker.lorem.sentence();c.file="default.png";c.user=b.user;c.save().then(e=>{d.status(200).json({success:`${b.body.number} dummies has been generated `})}).catch(e=>console.log(e))}});
router.get("/show/:id",(b,d)=>{Post.findOne({_id:b.params.id}).populate("user").then(a=>{console.log(a);d.json({post:a})}).catch(a=>console.log(a))});router.put("/like",requireLogin,(b,d)=>{Post.findOne({_id:b.body.postId}).populate("user").then(a=>{a.likes.push(b.user._id);a.save().then(c=>{d.json(c);console.log(c)}).catch(c=>{d.status(422).json({error:"Error occured"});console.log(c)})})});
router.put("/unlike",requireLogin,(b,d)=>{Post.findOne({_id:b.body.postId}).populate("user").then(a=>{a.likes.pull(b.user._id);a.save().then(c=>{d.json(c);console.log(c)}).catch(c=>{d.status(422).json({error:"Error occured"});console.log(c)})})});
router.post("/comment/:id",requireLogin,(b,d)=>{Post.findOne({_id:b.params.id}).populate("user").then(a=>{a.comments.push({text:b.body.comment_msg,name:b.user.name,user:b.user._id});a.save().then(c=>{d.json(c);console.log(c)}).catch(c=>{d.status(422).json({error:"Error occured"});console.log(c)})})});router.get("/edit/:id",(b,d)=>{Post.findOne({id:b.params.id}).populate("user").then(a=>{d.render("admin/edit",{post:a})}).catch(a=>console.log(a))});
router.put("/update/:id",requireLogin,(b,d)=>{Post.findOne({_id:b.params.id}).then(a=>{a.title=b.body.title;a.content=b.body.content;a.file=b.body.file;a.save().then(c=>{d.json(c);console.log(c)}).catch(c=>{d.status(422).json({error:"Error occured"});console.log(c)})})});
router.delete("/delete/:id",requireLogin,(b,d)=>{Post.findOne({_id:b.params.id}).then(a=>{a.delete().then(c=>{console.log(c);d.status(200).json({success:"Post Deleted"})}).catch(c=>{console.log(c);d.status(200).json({success:c})})}).catch(a=>console.log(a))});
router.post("/search",(b,d)=>{let a=new RegExp(b.body.search,"i");Post.find({$or:[{title:a}]}).populate("user").then(c=>{c||d.status(402).json({error:"No Post with title"});1<c.length?d.json({posts:c}):Post.findOne({$or:[{title:a}]}).populate("user").then(e=>{d.json({post:e})}).catch(e=>console.log(e))}).catch(c=>console.log(c))});module.exports=router;