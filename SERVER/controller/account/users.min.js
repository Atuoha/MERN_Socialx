'use strict';const express=require("express"),app=express(),router=express.Router(),User=require("../../model/User"),faker=require("faker"),bcrypt=require("bcryptjs"),Post=require("../../model/Post"),requireLogin=require("../../helpers/require-login");router.get("/*",(b,e,a)=>{e.app.locals="user";a()});router.get("/all",(b,e)=>{User.find().select("-password").then(a=>{e.json({users:a})}).catch(a=>console.log(a))});
router.get("/all/limit",(b,e)=>{User.find().limit(7).select("-password").then(a=>{e.json({users:a})}).catch(a=>console.log(a))});router.post("/dummy",requireLogin,(b,e)=>{console.log("seen.....");for(let a=0;a<b.body.number;a++){let c=new User;c.name=faker.lorem.word();c.email=faker.lorem.word()+"@gmail.com";bcrypt.genSalt(10,(d,f)=>{d&&console.log(d);bcrypt.hash("12345",f,(h,k)=>{h&&console.log(h);c.password=k;c.save().then(g=>{e.json(g)}).catch(g=>console.log(g))})})}});
router.post("/follow/:id",requireLogin,(b,e)=>{User.findOne({_id:b.params.id}).then(a=>{a.followers.push(b.user._id);a.save().then(c=>{Post.find({user:b.params.id}).then(d=>{User.findOne({_id:b.user._id}).then(f=>{f.following.push(b.params.id);f.save().then(h=>{e.json({posts:d,user:a})})})}).catch(d=>console.log(d))}).catch(c=>console.log(c))}).catch(a=>console.log(a))});
router.post("/unfollow/:id",requireLogin,(b,e)=>{User.findOne({_id:b.params.id}).then(a=>{a.followers.pull(b.user._id);a.save().then(c=>{Post.find({user:b.params.id}).then(d=>{User.findOne({_id:b.user._id}).then(f=>{f.following.pull(b.params.id);f.save().then(h=>{e.json({posts:d,user:a})})})}).catch(d=>console.log(d))}).catch(c=>console.log(c))}).catch(a=>console.log(a))});
router.put("/edit/:id",(b,e)=>{User.findOne({_id:b.params.id}).then(a=>{b.body.password?(a.name=b.body.name,a.email=b.body.email,bcrypt.genSalt(10,(c,d)=>{bcrypt.hash(b.body.password,d,(f,h)=>{a.password=h;a.save().then(k=>{Post.find({user:b.params.id}).then(g=>{e.json({posts:g,user:a})}).catch(g=>console.log(g))}).catch(k=>console.log(k))})})):(a.name=b.body.name?b.body.name:a.name,a.email=b.body.email?b.body.email:a.email,a.save().then(c=>{Post.find({user:b.params.id}).then(d=>{e.json({posts:d,
user:a})}).catch(d=>console.log(d))}).catch(c=>console.log(c)))}).catch(a=>console.log(a))});router.delete("/delete/:id",(b,e)=>{User.findOne({_id:b.params.id}).then(a=>{a.delete().then(c=>{console.log(c);e.status(200).json({success:"Deleted"})}).catch(c=>console.log(c))}).catch(a=>console.log(a))});
router.post("/search",(b,e)=>{let a=new RegExp(b.body.search,"i");User.find({$or:[{name:a}]}).then(c=>{c||e.status(402).json({error:"No User Found!"});1<c.length?e.json({users:c}):User.findOne({$or:[{name:a}]}).then(d=>{Post.find({user:d}).then(f=>{e.json({posts:f,user:d})}).catch(f=>console.log(f))}).catch(d=>console.log(d))}).catch(c=>console.log(c))});module.exports=router;